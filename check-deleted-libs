#!/bin/sh

# Report the names of the processes (or QEMU VMs) using deleted libraries or binaries.
# Copyright (C) 2014-2020 Simon Deziel <simon@sdeziel.info>

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

# Explicitly set the PATH to that of ENV_SUPATH in /etc/login.defs and unset
# various other variables. For details, see:
# https://wiki.ubuntu.com/SecurityTeam/AppArmorPolicyReview#Execute_rules
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
export ENV=
export CDPATH=
export LC_ALL="C"

p_error () {
  echo "Error: $1" >&2
  exit 1
}

usage () {
  cat << EOF
Copyright (C) 2014-2020 Simon Deziel

Report the names of the processes (or QEMU VMs) using deleted libraries or binaries.

Usage:
  $(basename "$0") [--qemu-names]
EOF
  exit 0
}

# Check arguments
QEMU_NAMES=0
[ "$#" -gt 1 ] && usage
if [ "$#" -eq 1 ]; then
  [ "$1" != "--qemu-names" ] && usage
  QEMU_NAMES=1
fi

# Check if /proc/*/maps are readable by testing with PID=1
cd "/proc" || p_error "Cannot cd to /proc, aborting"
cat "1/maps" >/dev/null 2>&1 || p_error "Unable to read /proc/1/maps, are you running $SCRIPT_NAME with root privileges?"
[ -e "1/comm" ] || p_error "Please upgrade to 2.6.33+ to have /proc/[pid]/comm available. RHEL backported this to recent 2.6.32"

GREP_RE='/\(lib\|s\?bin/\)[^/]\+ (deleted)$'

# report names of VM running outdated QEMU
if [ "$QEMU_NAMES" -eq 1 ]; then
  pgrep -a ^qemu-system-.+ | sed 's/^\([0-9]\+\).\+ -name \(guest=\)\?\([^ ,]\+\).*/\1 \3/' | while read -r pid vmname; do
    # shellcheck disable=SC2015
    grep -q -m1 "$GREP_RE" "$pid/maps" 2>/dev/null && echo "$vmname" || true
  done
else
  # shellcheck disable=SC2046
  true | sort -u $(grep -m1 -l "$GREP_RE" [0-9]*/maps 2>/dev/null | sed 's/maps$/comm/')
fi
